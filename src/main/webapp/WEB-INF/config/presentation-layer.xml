<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

<!--  핸들러맵핑 등록-->
<!-- SimpleUrlHandlerMapping객체는 setter인젝션을 통해 properties타입의 컬렉션 객체를 의존성 주입하고 있다 -->
<!-- <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
<property name="mappings">
<props>
<prop key="/login.do">login</prop>
<prop key="/getBoardList.do">getBoardList</prop>
<prop key="/getBoard.do">getBoard</prop>
<prop key="/insertBoard.do">insertBoard</prop>
<prop key="/updateBoard.do">updateBoard</prop>
<prop key="/deleteBoard.do">deleteBoard</prop>
<prop key="/logout.do">logout</prop>
</props>
</property>
</bean> -->

<!--  컨트롤러 등록-->
<!-- <bean id="login" class="com.springbook.view.user.LoginController"></bean>
<bean id="getBoardList" class="com.springbook.view.board.GetBoardListController"></bean>
<bean id="getBoard" class="com.springbook.view.board.GetBoardController"></bean>
<bean id="insertBoard" class="com.springbook.view.board.InsertBoardController"></bean>
<bean id="updateBoard" class="com.springbook.view.board.UpdateBoardController"></bean>
<bean id="deleteBoard" class="com.springbook.view.board.DeleteBoardController"></bean>
<bean id="logout" class="com.springbook.view.user.LogoutController"></bean>
 -->
<!-- ViewResolver는 여러가지가 있지만 jsp를 뷰로 사용하는 경우에는  InternalResourceViewResolver을 사용-->
	<!-- ViewResolver 등록 -->
	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/board/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean> -->

<!--  Scans the classpath for annotated components that will be auto-registered as Spring beans. By default, the 
 Spring-provided @Component, @Repository, @Service, @Controller, @RestController, @ControllerAdvice, 
 and @Configuration stereotypes will be detected-->
 
 
 <!-- 파일 업로드 설정 id multipartResolver로 반드시, 용량 지정하지 않으면 무제한이므로 용량지정-->
 <!-- MultipartFile객체는 클라이언트가 업로드란 파일에 대한 모든 정보가 저장됨, 따라서 이 Multipartfile객체만 있으면 원하는 위치에 저장파일을 업로드 할 수 있다 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000" />
	</bean>
 <!-- 스프링에서는 @controllerAdvice 와 @ExceptionHandler어노테이션을 이용하여 컨트롤의 메소드 수정 중 발생하는 예외를 일괄적으로 처리할 수 있다 그걸위한 설정 -->
 <!-- 아래 사항이 없으면  @ExceptionHandler어노테이션은 인식하지 못한다 -->
 <mvc:annotation-driven></mvc:annotation-driven>
 
<context:component-scan base-package="com.springbook.view"></context:component-scan>

</beans>
